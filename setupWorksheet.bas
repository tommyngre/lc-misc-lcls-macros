Attribute VB_Name = "setupWorksheet"
Sub setupWorksheet()
' Generated by the Reflection Macro Recorder on 11-09-2017 15:07:16.69.
' Generated by Reflection for UNIX and OpenVMS 14.1.0.
    On Error GoTo ErrorHandler

    Const NEVER_TIME_OUT = 0

    Dim BS As String    ' Chr(rcBS) = Chr(8) = Control-H
    Dim HT As String    ' Chr(rcHT) = Chr(9) = Control-I
    Dim ESC As String   ' Chr(rcESC) = Chr(27) = Control-[

    BS = Chr(Reflection2.ControlCodes.rcBS)
    HT = Chr(Reflection2.ControlCodes.rcHT)
    ESC = Chr(Reflection2.ControlCodes.rcESC)

    With Session
        MyString1 = .GetText(23, 16, 23, 20)
    x = .CursorRow
    y = .CursorColumn
        
    If MyString1 = "CPU:9" And x = 0 And y = 1 Or MyString1 = "CPU:9" And x = 22 And y = 34 Then
    Else
        MsgBox "Aborting... This only runs on SYS9 from the Main Menu."
        Exit Sub
    End If
    End With

    'get lab code
    Dim LabCode As String
    LabCode = InputBox("Enter lab code", "Lab Code")
    If (LabCode = "") Or (Not LabCode Like "[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]") Then
        MsgBox "Aborting... That doesn't look like a valid lab code."
        Exit Sub
    End If
    
    'get worksheet #
    Dim Worksheets As String
    Worksheets = InputBox("Enter worksheet, or a comma-delimited string of worksheets" & vbNewLine & vbNewLine & "E.g. 1000,1001,1002", "Worksheets")
    
    Dim WorksheetDelimiter As String
    WorksheetDelimiter = ","
    
    Dim WorksheetAry() As String
    WorksheetAry = split(Worksheets, WorksheetDelimiter)
    Dim WorksheetAryLen As Integer
    WorksheetAryLen = (UBound(WorksheetAry) - LBound(WorksheetAry) + 1)

        'individual-test-code and count vars for loop
    Dim Worksheet As Variant
    Dim i As Integer
    i = 1
    
    'functional stuff in reflection begins here
    With Session
    For Each Worksheet In WorksheetAry 'loop through test codes in array
   
    
        If (Worksheet = "") Or (Not Worksheet Like "[0-9][0-9][0-9][0-9]") Then
            MsgBox "Aborting... That doesn't look like a valid worksheet."
            Exit Sub
        End If
    
        .Transmit "26"
        .TransmitTerminalKey rcVtPF4Key

        .Transmit "27"
        .TransmitTerminalKey rcVtPF4Key
        
        .Transmit "2"
        .TransmitTerminalKey rcVtPF4Key

        .Transmit Worksheet
        
        .Transmit LabCode
        
        .Transmit "2"
        .TransmitTerminalKey rcVtPF4Key

        .Transmit (LabCode & " wksht")
        .Transmit HT
        .Transmit HT
        .Transmit "3"
        .Transmit "n"
        .Transmit "080"
        .TransmitTerminalKey rcVtDownKey
        
        .Transmit ESC & "[Z"
        .TransmitTerminalKey rcVtLeftKey
        .Transmit "3"
        .TransmitTerminalKey rcVtRightKey
        .TransmitTerminalKey rcVtRightKey
        .TransmitTerminalKey rcVtRightKey
        .TransmitTerminalKey rcVtRightKey
        .TransmitTerminalKey rcVtRightKey
        .Transmit "3"
        
        .TransmitTerminalKey rcVtDownKey
        .Transmit HT
        .Transmit HT
        .Transmit HT
        .Transmit HT
        .Transmit "n"
        .TransmitTerminalKey rcVtPF4Key
        .TransmitTerminalKey rcVtF14Key
        .TransmitTerminalKey rcVtF14Key
        .TransmitTerminalKey rcVtF14Key
    
        i = i + 1
    Next 'end For Each
    
    End With
    Exit Sub

ErrorHandler:
    Session.MsgBox Err.Description, vbExclamation + vbOKOnly

End Sub
